openapi: 3.0.0
servers:
  # Added by API Auto Mocking Plugin
  - description: FaceID App
    url: http://localhost:4200/api
info:
  description: FaceId APP
  version: "1.0.0"
  title: FaceId API
  contact:
    email: hlavjah@gmail.com
  license:
    name: Apache 2.0
    url: 'https://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: user
    description: User operations
paths:
  /register:
    post:
      tags:
        - user
      summary: Register user
      operationId: registerUser
      description: |
        Register user into system
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegistrationDTO'
      x-amazon-apigateway-integration:
        payloadFormatVersion: "2.0"
        type: "aws_proxy"
        httpMethod: "POST"
        uri: "arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:736260876227:function:Register/invocations"
        connectionType: "INTERNET"
      responses:
        200:
          description: |
            Registration success
  /login:
    post:
      tags:
        - user
      summary: Login user
      operationId: loginUser
      description: |
        Login user into system
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLoginDTO'
      x-amazon-apigateway-integration:
        payloadFormatVersion: "2.0"
        type: "aws_proxy"
        httpMethod: "POST"
        uri: "arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:736260876227:function:Login/invocations"
        connectionType: "INTERNET"
      responses:
        200:
          description: |
            Login success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDTO'
  /logout:
    post:
      tags:
        - user
      summary: Logout user
      operationId: logoutUser
      description: |
        Logout user from system
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
      x-amazon-apigateway-integration:
        payloadFormatVersion: "2.0"
        type: "aws_proxy"
        httpMethod: "POST"
        uri: "arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:736260876227:function:Logout/invocations"
        connectionType: "INTERNET"
      responses:
        200:
          description: |
            Logout success
  /dashboard:
    get:
      tags:
        - user
      summary: User logins
      operationId: dashboardData
      description: |
        Get user logins and logouts
      x-amazon-apigateway-integration:
        payloadFormatVersion: "2.0"
        type: "aws_proxy"
        httpMethod: "POST"
        uri: "arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:736260876227:function:Dashboard/invocations"
        connectionType: "INTERNET"
      responses:
        200:
          description: Succes get user data
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserDTO'
components:
  schemas:
    UserRegistrationDTO:
      type: object
      properties:
        email:
          type: string
          example: hlavja@students.zcu.cz
        firstName:
          type: string
          example: Jakub
        lastName:
          type: string
          example: Hlavac
        image:
          type: string
    UserLoginDTO:
      type: object
      properties:
        email:
          type: string
          example: hlavja@students.zcu.cz
        image:
          type: string
    UserDTO:
      type: object
      properties:
        email:
          type: string
          example: hlavja@students.zcu.cz
        firstName:
          type: string
          example: Jakub
        lastName:
          type: string
          example: Hlavac
        image:
          type: string
        logins:
          $ref: '#/components/schemas/Logins'
        loggedIn:
          type: boolean
    Logins:
      type: array
